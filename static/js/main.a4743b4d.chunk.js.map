{"version":3,"sources":["components/clock/clock.js","components/randomizer/ButtonRandomizer.js","components/randomizer/Randomizer.js","components/weather/Form.js","components/weather/SwitcherWeather.js","components/weather/Weather.js","components/toDo/toDo.js","App.js","index.js"],"names":["Clock","props","state","time","Date","toLocaleString","this","intervalID","setInterval","tick","clearInterval","setState","className","React","Component","ButtonRandomizer","id","href","quote","author","onClick","handleClick","Randomizer","quoteData","randomQuote","bind","fetch","then","response","json","data","quotes","catch","error","console","log","randomNumber","Math","floor","random","length","oneRandomQuote","Form","gettingWeather","onSubmit","TextField","name","label","variant","useStyles","makeStyles","theme","root","height","wrapper","width","spacing","paper","zIndex","position","margin","padding","SimpleSlide","classes","useState","checked","setChecked","city","country","temp","sunset","humidity","description","includes","FormControlLabel","control","Switch","onChange","prev","Slide","direction","in","mountOnEnter","unmountOnExit","Paper","elevation","Weather","sunrise","ToDo","todoList","todo","text","category","filter","addTodo","newTodoList","push","putOneTodo","e","target","value","putOneCategory","deleteTodo","index","splice","displayCategory","innerText","placeholder","map","App","icon","undefined","a","preventDefault","elements","api_url","sys","date","setTime","sunset_date","getHours","getMinutes","getSeconds","ceil","main","weather","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4743b4d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './clock.scss';\r\n\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { time:new Date().toLocaleString() }\r\n    }\r\n    componentDidMount() {\r\n        this.intervalID = setInterval(() => this.tick(), 1000);\r\n      }\r\n      componentWillUnmount() {\r\n        clearInterval(this.intervalID);\r\n      }\r\n      tick() {\r\n        this.setState({\r\n          time: new Date().toLocaleString(),\r\n        });\r\n      }\r\n    render() {\r\n        return ( \r\n           <p className = \"App-clock\" >\r\n           { this.state.time }. </p>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Clock;","import React from 'react';\r\n\r\n\r\nclass ButtonRandomizer extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n  \r\n    render() {\r\n      return(\r\n        <div className='buttons'>\r\n          <a id='tweet-quote' className='button' href={`https://twitter.com/intent/tweet/?text=${this.props.quote} - ${this.props.author}`}><i className='fab fa-twitter'></i></a>\r\n          <button id='new-quote' className='button' onClick={this.props.handleClick}>\r\n            New quote\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n}    \r\n\r\nexport default ButtonRandomizer;","import React from 'react';\r\nimport ButtonRandomizer from \"./ButtonRandomizer\"\r\n\r\n\r\nclass Randomizer extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        quoteData: [],\r\n        quote: '',\r\n        author: ''\r\n      }\r\n      this.randomQuote = this.randomQuote.bind(this);\r\n      this.handleClick = this.handleClick.bind(this);\r\n    }\r\n  \r\n    componentDidMount() {\r\n      const API = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/'\r\n      fetch(API)\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n              this.setState({\r\n                quoteData: data.quotes\r\n              },()=>{\r\n                // add handle click function here, so that a random quote in shown on initial load\r\n                this.handleClick();\r\n              })\r\n          })\r\n          .catch(error => console.log('Error', error));\r\n          // remove randomQuote() call from here, there is no use of that call here.\r\n  \r\n    }\r\n  \r\n    randomQuote() {\r\n      const randomNumber = Math.floor(Math.random() * this.state.quoteData.length);\r\n      return this.state.quoteData[randomNumber];\r\n    }\r\n  \r\n    handleClick() {\r\n      const oneRandomQuote = this.randomQuote();\r\n      this.setState({\r\n        quote: oneRandomQuote.quote,\r\n        author: oneRandomQuote.author\r\n      })\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div id='quote-box'>\r\n          <h1 id='text'>\r\n            {this.state.quote}\r\n          </h1>\r\n          <h3 id='author'>\r\n            - {this.state.author}\r\n          </h3>\r\n          <ButtonRandomizer handleClick={this.handleClick}/>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n  \r\n\r\nexport default Randomizer;","import React, { Component } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport default class Form extends Component {\r\n    render() {\r\n        const {gettingWeather}=this.props\r\n        return (\r\n            <div>\r\n                <h2>The weather</h2>\r\n                <form onSubmit={gettingWeather}>\r\n                <TextField id=\"outlined-basic\" name= \"city\" label=\"Choose city\" variant=\"outlined\" />\r\n                    {/* <input type = \"text\" name= \"city\" placeholder=\"City\"/> */}\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: 200,\r\n  },\r\n  wrapper: {\r\n    width: 250 + theme.spacing(1),\r\n  },\r\n  paper: {\r\n    zIndex: 1,\r\n    position: 'relative',\r\n    margin: theme.spacing(2),\r\n    padding: 10,\r\n  },\r\n\r\n}));\r\n\r\nexport default function SimpleSlide(props) {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  const handleChange = () => {\r\n    setChecked((prev) => !prev);\r\n  };\r\n\r\n  const { city, country, temp,  sunset, humidity,description  } = props\r\nif(description.includes('snow')){\r\n    <img    src=\"../../assets/weather/clean.jfif\"  />\r\n}\r\n  return (\r\n     <div className={classes.root}>\r\n      <div className={classes.wrapper} >\r\n        <FormControlLabel\r\n          control={<Switch checked={checked} onChange={handleChange} />}\r\n          label=\"More parametrs\"\r\n        />\r\n        <Slide direction=\"up\" in={checked} mountOnEnter unmountOnExit>\r\n          <Paper elevation={4} className={classes.paper}>\r\n          <div>\r\n\r\n           <p> <b>City:  </b>{city}</p>\r\n           <p> <b>Temp:  </b>{temp}</p>\r\n            <p><b>Country: </b>{country}</p>\r\n            <p><b>Sunset: </b>{sunset}</p>\r\n            <p><b>Humidity: </b> {humidity}</p>\r\n          </div>\r\n\r\n          </Paper>\r\n        </Slide>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react'\r\nimport Modalweather from './Modalweather'\r\nimport SimpleSlide from './SwitcherWeather';\r\n\r\nexport default class Weather extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        const { city, country, temp, sunrise, description, humidity } = this.props\r\n        return (\r\n            <div>\r\n            <p>Today is  {description}</p>\r\n                <p> {city} <b> {temp} </b>   </p>\r\n\r\n                <SimpleSlide city={city}\r\n                    country={country}\r\n                    temp={temp}\r\n                    sunrise={sunrise}\r\n                    humidity={humidity}\r\n                    description={description} />\r\n                {/* <Modalweather\r\n                city={city}\r\n    country ={country}\r\n    temp = {temp}\r\n    sunrise={sunrise}\r\n\r\n    humidity={humidity}\r\n\r\n          /> */}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport './toDo.scss'\r\nexport default class ToDo extends React.Component {\r\n    state = {\r\n        todoList: [],\r\n        todo: { text: '', category: 'Coding' },\r\n        filter: 'All',\r\n    };\r\n\r\n    addTodo = () => {\r\n        let newTodoList = this.state.todoList;\r\n        newTodoList.push(this.state.todo);\r\n        this.setState({\r\n            todo: { text: '', category: this.state.todo.category },\r\n            todoList: newTodoList,\r\n        });\r\n    };\r\n\r\n    putOneTodo = (e) => {\r\n        this.setState({\r\n            todo: {\r\n                text: e.target.value,\r\n                category: this.state.todo.category,\r\n            },\r\n        });\r\n    };\r\n\r\n    putOneCategory = (e) => {\r\n        this.setState({\r\n            todo: {\r\n                text: this.state.todo.text,\r\n                category: e.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    deleteTodo = (index) => {\r\n        let newTodoList = this.state.todoList;\r\n        newTodoList.splice(index, 1);\r\n        this.setState({\r\n            todoList: newTodoList,\r\n        });\r\n    };\r\n\r\n    displayCategory = (e) => {\r\n        this.setState({\r\n            filter: e.target.innerText,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Todo\">\r\n                \r\n                <input\r\n                    value={this.state.todo.text}\r\n                    onChange={this.putOneTodo}\r\n                    placeholder=\"Write your todo here...\"\r\n                ></input>\r\n                <select\r\n                    onChange={this.putOneCategory}\r\n                    className=\"categories-container\"\r\n                >\r\n                    <option>Coding</option>\r\n                    <option>Sports</option>\r\n                    <option>Food</option>\r\n                    <option>Extra</option>\r\n                </select>\r\n                <button className=\"add-btn\" onClick={this.addTodo}>\r\n                    Add it\r\n                </button>\r\n                <div className=\"common-container\">\r\n                    <div className=\"todos-container\">\r\n                        {this.state.todoList.length !== 0 ? (\r\n                            this.state.todoList\r\n                                .filter(\r\n                                    (todo) =>\r\n                                        this.state.filter === 'All' ||\r\n                                        todo.category === this.state.filter\r\n                                )\r\n                                .map((todo, index) => {\r\n                                    return (\r\n                                        <div\r\n                                            className=\"todo-container\"\r\n                                            key={index}\r\n                                        >\r\n                                            <span>- {todo.text} | </span>\r\n                                            <span className=\"category-container\">\r\n                                                {' '}\r\n                                                {todo.category}{' '}\r\n                                            </span>\r\n                                            <button\r\n                                                onClick={() => {\r\n                                                    this.deleteTodo(index);\r\n                                                }}\r\n                                                className=\"delete-btn\"\r\n                                            >\r\n                                                Delete\r\n                                            </button>\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                        ) : (\r\n                            <div>You did not add any todo yet</div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"filter-container\">\r\n                        <p>Filter it</p>\r\n                        <hr />\r\n                        <button\r\n                            className=\"category-button\"\r\n                            onClick={this.displayCategory}\r\n                        >\r\n                            Coding\r\n                        </button>\r\n                        <button\r\n                            className=\"category-button\"\r\n                            onClick={this.displayCategory}\r\n                        >\r\n                            Sports\r\n                        </button>\r\n                        <button\r\n                            className=\"category-button\"\r\n                            onClick={this.displayCategory}\r\n                        >\r\n                            Food\r\n                        </button>\r\n                        <button\r\n                            className=\"category-button\"\r\n                            onClick={this.displayCategory}\r\n                        >\r\n                            Extra\r\n                        </button>\r\n                        <button\r\n                            className=\"category-button\"\r\n                            onClick={this.displayCategory}\r\n                        >\r\n                            All\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport Clock from './components/clock/clock';\r\nimport Randomizer from './components/randomizer/Randomizer'\r\nimport Form from './components/weather/Form';\r\n\r\n\r\nimport Weather from './components/weather/Weather';\r\nimport ToDo from './components/toDo/toDo';\r\n\r\nconst API_KEY= '8768da57bd891fa41359848c1665c9e4';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  state={\r\n\r\n    icon:undefined,\r\n    temp: undefined,\r\n    city: undefined,\r\n    country:undefined ,\r\n    humidity: undefined,\r\n    sunset: undefined,\r\n    description: '...',\r\n  }\r\n\r\n  gettingWeather= async (e) =>{\r\n    e.preventDefault();\r\n    const city=e.target.elements.city.value;\r\nconsole.log(  'xbfc', city)\r\n    if(city){\r\n      const api_url = await\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=8768da57bd891fa41359848c1665c9e4&units=metric`)\r\n      const data = await api_url.json()\r\n      console.log(data)\r\n\r\n      var sunset=data.sys.sunset;\r\n\r\n      var date = new Date();\r\n      date.setTime(sunset);\r\n      var sunset_date = date.getHours()+ \":\" + date.getMinutes()+ \":\" + date.getSeconds()\r\n\r\n      this.setState({\r\n        city: data.name,\r\n        temp: Math.ceil(data.main.temp)+ '°C',\r\n      // icon:data.weather[0].icon,\r\n        country:data.sys.country,\r\n        humidity: data.main.humidity,\r\n        sunset:  sunset_date,\r\n        description: data.weather[0].description\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n      const  gettingWeather =this.gettingWeather\r\n      const {city, country,temp,icon,sunset,humidity,description}=this.state\r\n    return (\r\n      <div>\r\n      <div className='weatherBlock'>\r\n          <Form gettingWeather={gettingWeather}/>\r\n        <Weather  city={city}\r\n        country ={country}\r\n        temp = {temp}\r\n        sunset = {sunset}\r\n        icon={icon}\r\n        humidity={humidity}\r\n        description={description} />\r\n      </div>\r\n\r\n        <div className=\"App\">\r\n          <Clock />\r\n        <Randomizer />\r\n        <ToDo/>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <App />,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}